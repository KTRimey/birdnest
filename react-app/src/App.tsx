import { useState, useCallback, useEffect } from "react";
import * as C from "@chakra-ui/react";
import { ColorModeSwitcher } from "./ColorModeSwitcher";

import ViolatorInfo from "./Violator";

type Violator = {
  drone_id: string;
  last_seen: string;
  closest_approach: number;
  closest_approach_time: string;
  first_name: string | null;
  last_name: string | null;
  phone: string | null;
  email: string | null;
};

export function App() {
  const [violators, setViolators] = useState<Violator[]>();

  const doFetch = useCallback(() => {
    fetch("/report")
      .then((res) => res.json())
      .then((data) => {
        setViolators(data);
      })
      .catch((e: Error) => {
        console.error(e);
      });
  }, []);

  useEffect(() => {
    doFetch(); // on page load
    // fetch on interval
    const interval = setInterval(() => {
      doFetch();
    }, 2000);
    return () => clearInterval(interval);
  }, [doFetch]);

  const accentColor = C.useColorModeValue("teal.500", "teal.300");
  return (
    <C.Grid p={3}>
      <ColorModeSwitcher justifySelf="flex-end" />
      <C.VStack spacing={6}>
        <C.Box>
          <C.Popover
            trigger="hover"
            openDelay={500}
            closeDelay={500}
            offset={[0, 0]}
          >
            <C.PopoverTrigger>
              <C.Image
                boxSize="16rem"
                src="/DALLE.png"
                alt="DALL-E generated image of drone and duck"
              />
            </C.PopoverTrigger>
            <C.PopoverContent maxW="16.5rem">
              <C.PopoverBody fontSize="sm" px={2} py={1}>
                Image generated by{" "}
                <C.Link
                  href="https://openai.com/dall-e-2/"
                  isExternal
                  color={accentColor}
                >
                  OpenAI DALL-E 2
                </C.Link>
              </C.PopoverBody>
            </C.PopoverContent>
          </C.Popover>
        </C.Box>
        <C.Text fontSize="xl" pt={2}>
          Pilots who have recently violated the NDZ perimeter
        </C.Text>
        <C.TableContainer>
          <C.Table>
            <C.Thead>
              <C.Tr>
                <C.Th />
                <C.Th>Closest Approach</C.Th>
                <C.Th>Occurred at</C.Th>
                <C.Th />
              </C.Tr>
            </C.Thead>
            <C.Tbody>
              {violators &&
                violators.map((violator, i) => (
                  <C.Tr key={i}>
                    <ViolatorInfo
                      id={violator.drone_id}
                      closest_approach={violator.closest_approach}
                      closest_approach_time={violator.closest_approach_time}
                      first_name={violator.first_name}
                      last_name={violator.last_name}
                      phone={violator.phone}
                      email={violator.email}
                    />
                  </C.Tr>
                ))}
            </C.Tbody>
          </C.Table>
        </C.TableContainer>
      </C.VStack>
    </C.Grid>
  );
}
